// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
    USER
    ADMIN
}

enum PostStatus {
    PUBLISHED
    DRAFT
}

model User {
    id Int @id @default(autoincrement())
    email String @unique
    name String
    role Role @default(USER)
    posts Post[]
    comments  Comment[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Post {
    id Int @id @default(autoincrement())
    title String
    content String
    status PostStatus @default(DRAFT)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId Int
    comments Comment[]
}

model Comment {
    id Int @id @default(autoincrement())
    content String
    email String?
    username String @default("Anonymous")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId Int
    userId Int?
    user User? @relation(fields: [userId], references: [id])
}

